//---------------------------------------
// Luhn Verification
// data-attribute: data-parsley-luhn
//---------------------------------------
window.ParsleyValidator.addValidator('luhn', function (value, requirement) {
    value = value.replace(/[ -]/g, '');
    var digit,
        n,
        _j,
        _len1,
        _ref2,
        sum = 0;
    
    _ref2 = value.split('').reverse();
    
    for (n = _j = 0, _len1 = _ref2.length; _j < _len1; n = ++_j) {
        digit = _ref2[n];
        digit = +digit;
        if (n % 2) {
            digit *= 2;
            if (digit < 10) {
                sum += digit;
            } else {
                sum += digit - 9;
            }
        } else {
            sum += digit;
        }
    }
    
    return sum % 10 === 0;
    
},500).addMessage('en', 'luhn', globals.parsley.luhn);

//---------------------------------------
// CreditCard Number Verification
// data-attribute: data-parsley-creditcard
//---------------------------------------
window.ParsleyValidator.addValidator('creditcard', function (value, requirement) {
    var digit,
        n,
        _j,
        _len1,
        _ref2,
        valid,
        sum = 0;

    value = value.replace(/[ -]/g, '');
    _ref2 = value.split('').reverse();

    for (n = _j = 0, _len1 = _ref2.length; _j < _len1; n = ++_j) {
        digit = _ref2[n];
        digit = +digit;

        if (n % 2) {
            digit *= 2;

            if (digit < 10) {
                sum += digit;
            } else {
                sum += digit - 9;
            }
        } else {
            sum += digit;
        }
    }
    valid =  (sum % 10 === 0);

    // Checks for specific brands
    if(valid && requirement.length){
        var valid_cards = requirement.split(','),
            valid = false,
            card = getCreditCardBrand(value, true).split(' ');

        for( var c in card){
            if(requirement.indexOf(card[c]) > -1) {
                valid = true;
            }
        }
    }

    return valid;
    
},501).addMessage('en', 'creditcard', globals.parsley.creditcard);

//---------------------------------------
// CVC Verification
// data-attribute: data-parsley-cvc
//---------------------------------------
window.ParsleyValidator.addValidator('cvc', function (value) {
    return /^[0-9]{3,4}$/.test(value);
    
}, 32).addMessage('en', 'cvc', globals.parsley.cvc);

//---------------------------------------
// Expiry Date Verification
// data-attribute: data-parsley-expirydate
//---------------------------------------
window.ParsleyValidator.addValidator('expirydate', function (value) {
    var currentTime, expiry, prefix, ref;

    if(value.indexOf('/') === -1){
      return false;
    }

    var date = value.split('/'),
        month = date[0].trim(),
        year  = date[1].trim();

    if (!/^\d+$/.test(month)) {
        return false;
    }
    if (!/^\d+$/.test(year)) {
        return false;
    }
    if (!(parseInt(month, 10) <= 12)) {
        return false;
    }
    if (year.length === 2) {
        prefix = (new Date).getFullYear();
        prefix = prefix.toString().slice(0, 2);
        year = prefix + year;
    }
    expiry = new Date(year, month);
    currentTime = new Date;
    expiry.setMonth(expiry.getMonth() - 1);
    expiry.setMonth(expiry.getMonth() + 1, 1);
    return expiry > currentTime;
    
}, 500).addMessage('en', 'expirydate', globals.parsley.expDate);