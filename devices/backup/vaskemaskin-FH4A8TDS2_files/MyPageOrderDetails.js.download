/***
 * Module MyPageOrderDetails
 * Initiate scripts exclusive to order detail page in My pages.
 */
Site.MyPageOrderDetails = (function (window, S, $) {

	function redirect2TrackURL(e,elm){
		var targetURL = elm.attr("href");	
		$.ajax({url: targetURL,
			async: false,
			method: 'POST',
			dataType: "json",
			success: function(data){
				if (data.JumpTarget&&data.JumpTarget!='') {
					var url = data.JumpTarget.replace(/\&amp;/g,'&');
					window.open(url+data.TrackingNumbers, '_blank');		
				}else{
					var txtInfo = "There is no url available for "+data.ProductSKU+" - ProviderCode and BigBox ('"+data.ProviderCode+"','"+data.BigBox+"')";
					elm.attr("alt",txtInfo);
					elm.attr("title",txtInfo);
				}
			}});

		e.stopPropagation();
		return false;
	}
    return {
        init : function () {
            S.Common.out('Initiating Order...');
            
            /*
             * Tracking delivery information for an order
             */
        	$('.product-trackntrace a').click(function(e){return redirect2TrackURL(e,$(this));});
        	
        	/*
             * Prevent Markplace actions to run several times
             */
        	Site.MyPageOrderHistory.preventDoubleClick();
        	
        	$('#message-topic').selectmenu({
        	    change: function( event, ui ) {
        	        $(this).parsley().validate();
        	    }
            });
            
        	/*
        	 * Rate Marketplace seller
        	 */
        	$('#rate-seller').on('submit',function(event) {
        	    event.preventDefault();
        	    
        	    var $area = $('.seller-actions'),
        	        $box = $('.rate-seller .box', $area),
                    $response = $('.response-box', $box),
                    $form = $('form', $box),
                    url = $form.attr('action'),
                    postData = $form.serializeArray();
        	    
        	    Site.Common.createSpinner($box);
                
                var request = $.ajax({
                    url: url, 
                    data: postData,
                    method: 'POST'
                });
                
                request.done(function(data, status, xhr) {
                    if (xhr.status === 200) {
                        _.delay(function() {                    
                            $box.height($box.height());
                            $form.remove();
                        }, 2000);
                        
                        $response.addClass('open');
                    }
                });
                
                request.fail(function(data) {                    
                    globals.validationErrors = {
                        "formErrors" : { 
                            "id" : $form.attr('id'), 
                            "description" : globals.orderDetails.requestError
                        }
                    };
                    S.Validation.init();
                });
                
                request.always(function() {
                    Site.Common.removeSpinner();
                });
        	});
        	
        	/*
             * Send message to seller
             */
            $('body').on('submit', '#contact-seller', function(event) {
                event.preventDefault();
                
                var $area = $('.seller-actions'),
                    $box = $('.write-message', $area),
                    $form = $('form', $box),
                    $message = $('textarea', $box),
                    $button = $('button', $box),
                    url = $form.attr('action'),
                    $responseBox = $('.conversation', $area),
                    $responseBoxButtons = $('button', $responseBox),
                    postData = $form.serializeArray();
                
                if(!$form.parsley().isValid()) {
                    $form.parsley().validate();
                    return;
                }
                
                Site.Common.createSpinner($box);
                
                $form.unbind('submit');
                $button.prop('disabled, true');
                
                var request = $.ajax({
                    url: url, 
                    data: postData,
                    method: 'POST'
                });
                
                request.done(function(data, status, xhr) {
                    if (xhr.status === 200) {
                        
                        $('html, body').animate({
                            scrollTop: $responseBox.offset().top
                        }, 1000);
                        
                        $('.dropdown-content', $responseBox).animate({
                            scrollTop: 0
                        }, 500);
                            
                        updateMessageHistory();
                        $responseBoxButtons.prop('disabled', false);
                        
                        _.delay(function() {
                            $box.removeClass('open');
                            $message.val('');
                        }, 500);
                    }
                });
                
                request.fail(function(data) {
                    globals.validationErrors = {
                        "formErrors" : { 
                            "id" : $form.attr('id'), 
                            "description" : globals.orderDetails.messageRequestError
                        }
                    };
                    S.Validation.init();
                });
                
                request.always(function() {
                    Site.Common.removeSpinner($box);
                    $form.bind('submit');
                    $button.prop('disabled, false');
                });
            });
            
            /*
             * Rerender the message history
             */
            var updateMessageHistory = function() {
                var $wrapper = $('.seller-actions'),
                    $box = $('.conversation'),
                    $messages = $('.messages .dropdown-content', $box),
                    $showMoreButton = $('.messages .dropdown-button', $box),
                    url = $box.data('update-link');

                var request = $.ajax({
                    url: url,
                    method: 'POST'
                });
                
                Site.Common.createSpinner($box);
                
                request.done(function(data) {
                    if(data) {
                        var $result = $(data).find('.message:first-of-type'),
                            $messagesWrapper = $(data).find('.messages'),
                            numberOfMessages = parseInt($messagesWrapper.data('message-amount'));
                        
                        //Show conversationbox if not already shown
                        if (numberOfMessages > 0 && $box.hasClass('no-messages')) {
                            $box.removeClass('no-messages');
                        }
                        
                        //Adding the new message to the conversation
                        $messages.prepend($result);
                        
                        //Test if show more button should be shown
                        if (numberOfMessages > 2 && $showMoreButton.hasClass('hidden')) {
                            $showMoreButton.removeClass('hidden');
                        }
                        
                        //Add highlight effect on the new message
                        $('.message:first-of-type .message-content', $box).addClass('highlight');
                    }
                });
                
                request.always(function() {
                    Site.Common.removeSpinner();
                });
            };
            
            /*
             * Send message to seller
             */
            $('body').on('click', '.seller-actions .conversation button', function(event) {
                var $wrapper = $('.seller-actions'),
                    $button = $('.conversation button', $wrapper),
                    $messageBox = $('.write-message', $wrapper);
                
                $button.prop('disabled', true);
                $messageBox.addClass('open');
                $('html, body').animate({
                    scrollTop: $messageBox.offset().top
                }, 1000);
            });
            
            /*
             * Adjusting the height when collapsing the conversation to the seller
             */
            $('body').on('click', '.seller-actions .conversation .dropdown-button', function(){
                var $container = $('.seller-actions .conversation')
                    $contentWrapper = $('.dropdown-content-wrapper', $container),
                    $content = $('.dropdown-content', $contentWrapper);
                
                if ($contentWrapper.hasClass('open')) {
                    if (Site.RWD.isMqMatching(['M','S'])) {
                        $('html, body').animate({
                            scrollTop: $container.offset().top
                        }, 1000);
                    }
                    _.delay(function() {
                        $content.removeClass('adjusted-height');
                    }, 2000);
                } else {
                    $content.addClass('adjusted-height');
                }
            });
        } 
    };
    
}(this, Site, jQuery));